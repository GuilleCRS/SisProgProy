package lcdprinter;

import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;

import javax.swing.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;

public class Window extends JFrame {

    int caracteres = 100;
    private OutputStream salida = null;
    SerialPort puertoSerial;
    private final String nomPuerto = "COM3";
    private static final int timeOut = 2000;
    private static final int bauds = 9600;
    InputStream inputStream;

    public Window() {
        initComponents();
        letras();
        ArduinoConnection();


    }
    public void ArduinoConnection() {

        CommPortIdentifier idPuerto = null;
        Enumeration portEnum = CommPortIdentifier.getPortIdentifiers();

        while (portEnum.hasMoreElements()) {
            CommPortIdentifier currPortId = (CommPortIdentifier) portEnum.nextElement();

            if (nomPuerto.equals(currPortId.getName())) {
                idPuerto = currPortId;
                break;
            }
        }

        if (idPuerto == null) {

            System.exit(ERROR);
            return;
        }

        try {

            puertoSerial = (SerialPort) idPuerto.open(this.getClass().getName(), timeOut);

            puertoSerial.setSerialPortParams(bauds,
                    SerialPort.DATABITS_8,
                    SerialPort.STOPBITS_1,
                    SerialPort.PARITY_NONE);

            salida = puertoSerial.getOutputStream();

        } catch (Exception e) {

            System.exit(ERROR);
        }

    }

    private void EnviarDatos(String data) {

        try {
            salida.write(data.getBytes());
            System.out.println("Su mensaje fue: "+data+" con "+data.length()+ " caracteres de largo");

        } catch (IOException e) {

            System.exit(ERROR);
        }
    }




    public void letras() {
        caracteres = 63 -jTextFieldMensaje.getText().length();

        if (caracteres <= 0) {
            jLabelCaracteres.setText("Caracteres disponibles: 0");
            String cadena = "";
            cadena = jTextFieldMensaje.getText();
            cadena = cadena.substring(0, 63);
            jTextFieldMensaje.setText(cadena);

        } else {

            jLabelCaracteres.setText("Caracteres Disponibles: " + (caracteres));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldMensaje = new javax.swing.JTextField();
        jLabelCaracteres = new javax.swing.JLabel();
        jButtonEnviar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldMensaje.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTextFieldMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMensajeActionPerformed(evt);
            }
        });
        jTextFieldMensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMensajeKeyReleased(evt);
            }
        });
        jTextFieldMensaje.setToolTipText("El puerto serial recibe maximo 63 caracteres a 9600 bauds");

        jLabelCaracteres.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabelCaracteres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaracteres.setText("Caracteres disponibles: ");


        jButtonEnviar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButtonEnviar.setText("Enviar texto");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });

        jButtonLimpiar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jButtonLimpiar.setText("Limpiar Texto");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMensaje)
                    .addComponent(jLabelCaracteres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jButtonEnviar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLimpiar)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCaracteres)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEnviar)
                    .addComponent(jButtonLimpiar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();

        this.setVisible(true);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMensajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMensajeKeyReleased
        letras();
    }//GEN-LAST:event_jTextFieldMensajeKeyReleased

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        EnviarDatos(jTextFieldMensaje.getText());
        jTextFieldMensaje.setText("");
        letras();
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        jTextFieldMensaje.setText("");
        letras();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jTextFieldMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMensajeActionPerformed
        EnviarDatos(jTextFieldMensaje.getText());
        jTextFieldMensaje.setText("");
    }//GEN-LAST:event_jTextFieldMensajeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JLabel jLabelCaracteres;
    private javax.swing.JTextField jTextFieldMensaje;


    // End of variables declaration//GEN-END:variables
}
